{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "APIs",
    "fullyQualifiedName": "JSObject1.APIs",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "ReviewReply Lite",
    "collectionId": "ReviewReply Lite_JSObject1",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async () => {\n  try {\n    const body = JSON.stringify({\n      \"prompt\": \"Please provide a personalized response to a customer who has left a review of our \" + Input2.text + \" business named\" + Input2Copy.text + \". The response should acknowledge their feedback and address any concerns they have raised, while also highlighting the positive aspects of their experience. The response should not include any mention of discounts or specific names. Be sure to quickly get to the point\\nReview:\" + Input1.text + \"\\nReply:\",\n      \"max_tokens\": 100,\n      \"temperature\": 0.8,\n      \"top_p\": 1,\n      \"frequency_penalty\": 1,\n      \"presence_penalty\": 0,\n      \"stop\": [\"END\", \"Reply\"]\n    });\n    const response = await fetch('https://api.openai.com/v1/engines/text-davinci-003/completions', {\n      method: 'POST',\n      body: body,\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer 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'\n      }\n    });\n    const jsonResponse = await response.json();\n    console.log(jsonResponse.choices[0].text);\n    const inputjs = jsonResponse.choices[0].text;\n    const moderation_response = await fetch('https://api.openai.com/v1/moderations', {\n      method: 'POST',\n      body: JSON.stringify({\n        input: inputjs\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer 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'\n      }\n    });\n    const jsonModerationResponse = await moderation_response.json();\n    console.log(jsonModerationResponse);\n    if (jsonModerationResponse['results'][0]['flagged'] == false) {\n      (storeValue(\"apitextresponse\", inputjs, false), showModal('Modal1'));\n    }\n    ;\n  } catch (err) {\n    console.error(err);\n    return \"false\";\n  }\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "clientSideExecution": true,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async () => {\n  try {\n    const body = JSON.stringify({\n      \"prompt\": \"Please provide a personalized response to a customer who has left a review of our \" + Input2.text + \" business named\" + Input2Copy.text + \". The response should acknowledge their feedback and address any concerns they have raised, while also highlighting the positive aspects of their experience. The response should not include any mention of discounts or specific names. Be sure to quickly get to the point\\nReview:\" + Input1.text + \"\\nReply:\",\n      \"max_tokens\": 100,\n      \"temperature\": 0.8,\n      \"top_p\": 1,\n      \"frequency_penalty\": 1,\n      \"presence_penalty\": 0,\n      \"stop\": [\"END\", \"Reply\"]\n    });\n    const response = await fetch('https://api.openai.com/v1/engines/text-davinci-003/completions', {\n      method: 'POST',\n      body: body,\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer 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'\n      }\n    });\n    const jsonResponse = await response.json();\n    console.log(jsonResponse.choices[0].text);\n    const inputjs = jsonResponse.choices[0].text;\n    const moderation_response = await fetch('https://api.openai.com/v1/moderations', {\n      method: 'POST',\n      body: JSON.stringify({\n        input: inputjs\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer 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'\n      }\n    });\n    const jsonModerationResponse = await moderation_response.json();\n    console.log(jsonModerationResponse);\n    if (jsonModerationResponse['results'][0]['flagged'] == false) {\n      (storeValue(\"apitextresponse\", inputjs, false), showModal('Modal1'));\n    }\n    ;\n  } catch (err) {\n    console.error(err);\n    return \"false\";\n  }\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "ReviewReply Lite_JSObject1.APIs",
  "deleted": false,
  "gitSyncId": "63bef7e3a9c896341acc7314_63c5ac5adb65f73813d2f536"
}